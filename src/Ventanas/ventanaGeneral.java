/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import LibreriaSonido.Sonido;
import Mapas.MapasRPG;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import Ficheros.*;
/**
 *
 * @author dalvarezruiz
 * @author jquesadaabeijon
 */
public class ventanaGeneral extends javax.swing.JFrame {
        String nombre;

    /**
     * Creates new form ventanaGeneral
     */
    public ventanaGeneral() {
        initComponents();
        iniciar();
        nombre = JOptionPane.showInputDialog(null, "Introduce un nombre de personaje");
        Sonido sound = new Sonido();
        sound.playAudio("/Audio/sound.wav");
                      this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        mapa = new javax.swing.JButton();
        hacha = new javax.swing.JButton();
        llave = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        action2 = new javax.swing.JButton();
        action1 = new javax.swing.JButton();
        action3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        history = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("General");
        setMaximumSize(new java.awt.Dimension(830, 730));
        setPreferredSize(new java.awt.Dimension(830, 730));
        setResizable(false);
        getContentPane().setLayout(null);

        mapa.setBackground(new java.awt.Color(0, 0, 0));
        mapa.setForeground(new java.awt.Color(255, 255, 255));
        mapa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mapa.png"))); // NOI18N
        mapa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 102, 0), new java.awt.Color(153, 51, 0)));
        mapa.setFocusable(false);
        mapa.setMaximumSize(new java.awt.Dimension(20, 20));
        mapa.setMinimumSize(new java.awt.Dimension(20, 20));
        mapa.setPreferredSize(new java.awt.Dimension(20, 20));
        mapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapaActionPerformed(evt);
            }
        });
        getContentPane().add(mapa);
        mapa.setBounds(730, 560, 60, 40);

        hacha.setBackground(new java.awt.Color(0, 0, 0));
        hacha.setForeground(new java.awt.Color(255, 255, 255));
        hacha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/lenador.png"))); // NOI18N
        hacha.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 102, 0), new java.awt.Color(153, 51, 0)));
        hacha.setFocusable(false);
        hacha.setMaximumSize(new java.awt.Dimension(20, 20));
        hacha.setMinimumSize(new java.awt.Dimension(20, 20));
        hacha.setPreferredSize(new java.awt.Dimension(20, 20));
        hacha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hachaActionPerformed(evt);
            }
        });
        getContentPane().add(hacha);
        hacha.setBounds(650, 560, 70, 40);

        llave.setBackground(new java.awt.Color(0, 0, 0));
        llave.setForeground(new java.awt.Color(255, 255, 255));
        llave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/clave.png"))); // NOI18N
        llave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 102, 0), new java.awt.Color(153, 51, 0)));
        llave.setFocusable(false);
        llave.setMaximumSize(new java.awt.Dimension(20, 20));
        llave.setMinimumSize(new java.awt.Dimension(20, 20));
        llave.setPreferredSize(new java.awt.Dimension(20, 20));
        llave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                llaveActionPerformed(evt);
            }
        });
        getContentPane().add(llave);
        llave.setBounds(580, 560, 60, 40);

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(153, 0, 51));
        jButton5.setText("Volver a dormir");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 51, 0), new java.awt.Color(102, 51, 0)));
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setFocusable(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(530, 650, 270, 30);

        action2.setBackground(new java.awt.Color(0, 0, 0));
        action2.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        action2.setForeground(new java.awt.Color(255, 255, 255));
        action2.setText(map.maps[1][0]);
        action2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 51, 0), new java.awt.Color(102, 51, 0)));
        action2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        action2.setFocusable(false);
        action2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                action2ActionPerformed(evt);
            }
        });
        getContentPane().add(action2);
        action2.setBounds(20, 610, 460, 30);

        action1.setBackground(new java.awt.Color(0, 0, 0));
        action1.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        action1.setForeground(new java.awt.Color(255, 255, 255));
        action1.setText(map.maps[0][1]);
        action1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 51, 0), new java.awt.Color(102, 51, 0)));
        action1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        action1.setFocusable(false);
        action1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                action1ActionPerformed(evt);
            }
        });
        getContentPane().add(action1);
        action1.setBounds(20, 570, 460, 30);

        action3.setBackground(new java.awt.Color(0, 0, 0));
        action3.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        action3.setForeground(new java.awt.Color(255, 255, 255));
        action3.setText(map.maps[1][1]);
        action3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 51, 0), new java.awt.Color(102, 51, 0)));
        action3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        action3.setFocusable(false);
        action3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                action3ActionPerformed(evt);
            }
        });
        getContentPane().add(action3);
        action3.setBounds(20, 650, 460, 29);

        jLabel3.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Inventario");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(590, 520, 190, 20);

        jToggleButton2.setBackground(new java.awt.Color(0, 0, 0));
        jToggleButton2.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        jToggleButton2.setForeground(new java.awt.Color(255, 255, 255));
        jToggleButton2.setText("FX Off");
        jToggleButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 51, 0), new java.awt.Color(102, 51, 0)));
        jToggleButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jToggleButton2.setFocusable(false);
        getContentPane().add(jToggleButton2);
        jToggleButton2.setBounds(725, 13, 80, 30);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204), new java.awt.Color(153, 51, 0), new java.awt.Color(102, 51, 0)));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setAutoscrolls(true);

        description.setBackground(new java.awt.Color(0, 0, 0));
        description.setColumns(20);
        description.setFont(new java.awt.Font("URW Bookman L", 0, 18)); // NOI18N
        description.setForeground(new java.awt.Color(255, 255, 255));
        description.setRows(3);
        description.setTabSize(5);
        description.setWrapStyleWord(true);
        jScrollPane2.setViewportView(description);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(20, 460, 460, 100);

        jPanel1.setLayout(null);

        history.setFont(new java.awt.Font("URW Bookman L", 0, 24)); // NOI18N
        history.setText(map.maps[0][0]);
        history.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        history.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        history.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel1.add(history);
        history.setBounds(10, 10, 440, 420);
        history.getAccessibleContext().setAccessibleName("Te internas en el bosque y te das cuenta de que \nes mucho más profundo de lo que creías. La luz \napenas es capaz de atravesar las frondosas ramas \nde los árboles. Hacia el Este ves un reflejo, quizá \nsea agua. Hacia el Oeste ves un pequeño camino \nque parece meterse entre los árboles. Hacia el Norte \nves otro camino y una señal en el suelo que dice ‘NO PASAR’.\n\n1. Vas a inspeccionar el reflejo. \n2. Vas por el camino entre los árboles. \n3.Ignoras la señal del suelo y te diriges hacia el Norte.");
        history.getAccessibleContext().setAccessibleDescription("");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/papyrus2.jpg"))); // NOI18N
        jLabel1.setLabelFor(jPanel1);
        jLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 102), new java.awt.Color(153, 153, 153), new java.awt.Color(153, 51, 0), new java.awt.Color(102, 51, 0)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 51, 0))));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 460, 440);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 10, 460, 440);
        jPanel1.getAccessibleContext().setAccessibleDescription("");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.jpg"))); // NOI18N
        jLabel4.setFocusable(false);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(-110, -20, 930, 770);

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Mapas.MapasRPG map = new MapasRPG();
    
    
    private void iniciar(){
        map.cargarJuego();
        history.setText(String.valueOf(map.maps[0][0]));
        action1.setText(String.valueOf(map.maps[0][1]));
        action2.setText(String.valueOf(map.maps[1][0]));
        action2.setVisible(true);
        action3.setText(String.valueOf(map.maps[1][1]));
        action3.setVisible(true);
        mapa.setVisible(false);
        hacha.setVisible(false);
        llave.setVisible(false);
        
        map.inventario();
        description.setEditable(false);
        description.setText(null);
        
    }
    
    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        partida_Guardada recuerdos = new partida_Guardada();
        this.dispose();    
        Ficheros.CrearFichero fichero = new Ficheros.CrearFichero();
        try {
            recuerdos.setVisible(true);
            fichero.crearFichero("\\src\\DatosGuardados\\", nombre, 30);
            
        } catch (IOException ex) {
           partida_Guardada_Error error = new partida_Guardada_Error();
           error.setVisible(true);
        } 
        
            
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    private void action1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_action1ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < 40; i++) {
            if (history.getText().equals(String.valueOf(map.maps[0][0]))){  //Inicio
            
                    history.setText(String.valueOf(map.maps[2][0]));
                    action1.setText(String.valueOf(map.maps[2][1]));
                    action2.setText(String.valueOf(map.maps[1][2]));
                    action2.setVisible(true);
                    action3.setText(String.valueOf(map.maps[2][2]));
                    action3.setVisible(true);
                    break;
                }
       
            else if (history.getText().equals(String.valueOf(map.maps[2][0]))){
            
                    history.setText(String.valueOf(map.maps[5][0]));
                    action1.setText(String.valueOf(map.maps[5][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }  
            
            else if (history.getText().equals(String.valueOf(map.maps[3][0]))){
            
                    history.setText(String.valueOf(map.maps[8][0]));
                    action1.setText(String.valueOf(map.maps[8][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[4][0]))){
            
                    history.setText(String.valueOf(map.maps[10][0]));
                    action1.setText(String.valueOf(map.maps[10][1]));
                    action2.setText(String.valueOf(map.maps[1][10]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[5][0]))){
                
                    iniciar();
                    break;
                }
                                
            else if (history.getText().equals(String.valueOf(map.maps[6][0]))){
            
                    history.setText(String.valueOf(map.maps[13][0]));
                    action1.setText(String.valueOf(map.maps[13][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    description.setText(null);      ////El texto de la descripcion se limpia tras recoger el hacha.
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[7][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[8][0]))){
            
                    history.setText(String.valueOf(map.maps[15][0]));
                    action1.setText(String.valueOf(map.maps[15][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[9][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[10][0]))){
            
                    history.setText(String.valueOf(map.maps[16][0]));
                    action1.setText(String.valueOf(map.maps[16][1]));
                    action2.setText(String.valueOf(map.maps[1][16]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    //inventario.setModel(String.valueOf(map.inventario[2][0]));
                    description.setText(String.valueOf(map.inventario[2][1]));      //Encuentras el hacha.
                    hacha.setVisible(true);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[11][0]))){
            
                    history.setText(String.valueOf(map.maps[17][0]));
                    action1.setText(String.valueOf(map.maps[17][1]));
                    action2.setText(String.valueOf(map.maps[1][17]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(null);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[12][0]))){
            
                    history.setText(String.valueOf(map.maps[19][0]));
                    action1.setText(String.valueOf(map.maps[19][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[13][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[14][0]))){
            
                    history.setText(String.valueOf(map.maps[21][0]));
                    action1.setText(String.valueOf(map.maps[21][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[15][0]))){
            
                    history.setText(String.valueOf(map.maps[23][0]));
                    action1.setText(String.valueOf(map.maps[23][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[16][0]))){
            
                    history.setText(String.valueOf(map.maps[24][0]));
                    action1.setText(String.valueOf(map.maps[24][1]));
                    action2.setText(String.valueOf(map.maps[1][24]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(null);           //El texto de la descripcion se limpia tras recoger la llave.
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[17][0]))){
            
                    history.setText(String.valueOf(map.maps[26][0]));
                    action1.setText(String.valueOf(map.maps[26][1]));
                    action2.setText(String.valueOf(map.maps[1][26]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[18][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[19][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[20][0]))){
            
                    history.setText(String.valueOf(map.maps[28][0]));
                    action1.setText(String.valueOf(map.maps[28][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[21][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[22][0]))){
            
                    history.setText(String.valueOf(map.maps[3][0]));
                    action1.setText(String.valueOf(map.maps[3][1]));
                    action2.setText(String.valueOf(map.maps[1][3]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[23][0]))){
            
                    history.setText(String.valueOf(map.maps[30][0]));
                    action1.setText(String.valueOf(map.maps[30][1]));
                    action3.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[24][0]))){
            
                    history.setText(String.valueOf(map.maps[11][0]));
                    action1.setText(String.valueOf(map.maps[11][1]));
                    action2.setText(String.valueOf(map.maps[1][11]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(String.valueOf(map.inventario[0][1]));
                    mapa.setVisible(true);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[25][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[26][0]))){
            
                    history.setText(String.valueOf(map.maps[3][0]));
                    action1.setText(String.valueOf(map.maps[3][1]));
                    action2.setText(String.valueOf(map.maps[1][3]));
                    action1.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[27][0]))){
            
                    history.setText(String.valueOf(map.maps[18][0]));
                    action1.setText(String.valueOf(map.maps[18][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    description.setText(null);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[28][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[29][0]))){
            
                    history.setText(String.valueOf(map.maps[10][0]));
                    action1.setText(String.valueOf(map.maps[10][1]));
                    action2.setText(String.valueOf(map.maps[1][10]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[30][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[31][0]))){
            
                    history.setText(String.valueOf(map.maps[32][0]));
                    action1.setText(String.valueOf(map.maps[32][1]));
//                    action2.setText(String.valueOf(map.maps[1][32]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[32][0]))){
            
                    history.setText(String.valueOf(map.maps[34][0]));
                    action1.setText(String.valueOf(map.maps[34][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[33][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[34][0]))){
            
                    history.setText(String.valueOf(map.maps[35][0]));
                    action1.setText(String.valueOf(map.maps[35][1]));
                    action2.setText(String.valueOf(map.maps[1][35]));
                    action2.setVisible(true);
                    action3.setText(String.valueOf(map.maps[35][35]));
                    action3.setVisible(true);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[35][0]))){
            
                    history.setText(String.valueOf(map.maps[36][0]));
                    action1.setText(String.valueOf(map.maps[36][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    description.setText(null);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[36][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[32][0]))){
            
                    iniciar();
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[38][0]))){
            
                    iniciar();
                    break;
                }
        }
            
        
    }//GEN-LAST:event_action1ActionPerformed

    private void action2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_action2ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < 20; i++) {
            
            if (history.getText().equals(String.valueOf(map.maps[0][0]))){
                
                    history.setText(String.valueOf(map.maps[3][0]));
                    action1.setText(String.valueOf(map.maps[3][1]));
                    action2.setText(String.valueOf(map.maps[1][3]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[2][0]))){
                
                    history.setText(String.valueOf(map.maps[6][0]));
                    action1.setText(String.valueOf(map.maps[6][1]));
                    action2.setText(String.valueOf(map.maps[1][6]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(String.valueOf(map.inventario[3][1]));      //Encuentras la llave.
                    llave.setVisible(true);
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[3][0]))){
                
                    history.setText(String.valueOf(map.maps[9][0]));
                    action1.setText(String.valueOf(map.maps[9][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[4][0]))){
                
                    history.setText(String.valueOf(map.maps[11][0]));
                    action1.setText(String.valueOf(map.maps[11][1]));
                    action2.setText(String.valueOf(map.maps[1][11]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(String.valueOf(map.inventario[0][1]));
                    mapa.setVisible(true);
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[6][0]))){
                
                    history.setText(String.valueOf(map.maps[14][0]));
                    action1.setText(String.valueOf(map.maps[14][1]));
                    action2.setText(String.valueOf(map.maps[1][14]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(null);      ////El texto de la descripcion se limpia tras recoger el hacha.
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[10][0]))){
                
                    history.setText(String.valueOf(map.maps[4][0]));
                    action1.setText(String.valueOf(map.maps[4][1]));
                    action2.setText(String.valueOf(map.maps[1][4]));
                    action2.setVisible(true);
                    action3.setText(String.valueOf(map.maps[4][4]));
                    action3.setVisible(true);
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[11][0]))){
                
                    history.setText(String.valueOf(map.maps[18][0]));
                    action1.setText(String.valueOf(map.maps[18][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[12][0]))){
            
                    history.setText(String.valueOf(map.maps[20][0]));
                    action1.setText(String.valueOf(map.maps[20][1]));
                    action2.setText(String.valueOf(map.maps[1][20]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[14][0]))){
            
                    history.setText(String.valueOf(map.maps[22][0]));
                    action1.setText(String.valueOf(map.maps[22][1]));
                    action2.setText(String.valueOf(map.maps[1][22]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[16][0]))){
            
                    history.setText(String.valueOf(map.maps[25][0]));
                    action1.setText(String.valueOf(map.maps[25][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    description.setText(null);          ////El texto de la descripcion se limpia tras recoger la llave.
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[17][0]))){
            
                    history.setText(String.valueOf(map.maps[27][0]));
                    action1.setText(String.valueOf(map.maps[27][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[20][0]))){
            
                    history.setText(String.valueOf(map.maps[29][0]));
                    action1.setText(String.valueOf(map.maps[29][1]));
                    action2.setText(String.valueOf(map.maps[1][29]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[22][0]))){
            
                    history.setText(String.valueOf(map.maps[4][0]));
                    action1.setText(String.valueOf(map.maps[4][1]));
                    action2.setText(String.valueOf(map.maps[1][4]));
                    action2.setVisible(true);
                    action3.setText(String.valueOf(map.maps[4][4]));
                    action3.setVisible(true);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[24][0]))){
            
                    history.setText(String.valueOf(map.maps[12][0]));
                    action1.setText(String.valueOf(map.maps[12][1]));
                    action2.setText(String.valueOf(map.maps[1][12]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[26][0]))){
            
                    history.setText(String.valueOf(map.maps[2][0]));
                    action1.setText(String.valueOf(map.maps[2][1]));
                    action2.setText(String.valueOf(map.maps[1][2]));
                    action2.setVisible(true);
                    action3.setText(String.valueOf(map.maps[2][2]));
                    action3.setVisible(true);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[29][0]))){
            
                    history.setText(String.valueOf(map.maps[11][0]));
                    action1.setText(String.valueOf(map.maps[11][1]));
                    action2.setText(String.valueOf(map.maps[1][11]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(String.valueOf(map.inventario[0][1]));
                    mapa.setVisible(true);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[31][0]))){
            
                    history.setText(String.valueOf(map.maps[33][0]));
                    action1.setText(String.valueOf(map.maps[33][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[34][0]))){
            
                    history.setText(String.valueOf(map.maps[36][0]));
                    action1.setText(String.valueOf(map.maps[36][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[35][0]))){
            
                    history.setText(String.valueOf(map.maps[37][0]));
                    action1.setText(String.valueOf(map.maps[37][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            
        }
    }//GEN-LAST:event_action2ActionPerformed

    private void action3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_action3ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < 10; i++) {
            
            if (history.getText().equals(String.valueOf(map.maps[0][0]))){
                
                    history.setText(String.valueOf(map.maps[4][0]));
                    action1.setText(String.valueOf(map.maps[4][1]));
                    action2.setText(String.valueOf(map.maps[1][4]));
                    action2.setVisible(true);
                    action3.setText(String.valueOf(map.maps[4][4]));
                    action3.setVisible(true);
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[2][0]))){
                
                    history.setText(String.valueOf(map.maps[7][0]));
                    action1.setText(String.valueOf(map.maps[7][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            
            if (history.getText().equals(String.valueOf(map.maps[4][0]))){
                
                    history.setText(String.valueOf(map.maps[12][0]));
                    action1.setText(String.valueOf(map.maps[12][1]));
                    action2.setText(String.valueOf(map.maps[1][12]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    break;
                }
            
            else if (history.getText().equals(String.valueOf(map.maps[35][0]))){
            
                    history.setText(String.valueOf(map.maps[38][0]));
                    action1.setText(String.valueOf(map.maps[38][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    break;
                }
            

            
            
            
    //            if (history.getText().equals(String.valueOf(map.maps[1][0]))){
    //                
    //                    history.setText(String.valueOf(map.maps[3][0]));
    //                    action1.setText(String.valueOf(map.maps[3][1]));
    //                    action2.setText(String.valueOf(map.maps[1][3]));
    //                    action3.setText(String.valueOf(map.maps[3][3]));
    //                    break;
    //                }
    //            
//            if (action2.getText().equals(String.valueOf(map.maps[1][0]))){
//                
//                    history.setText(String.valueOf(map.maps[3][0]));
//                    action1.setText(String.valueOf(map.maps[3][1]));
//                    action2.setText(String.valueOf(map.maps[1][3]));
//                    action3.setText(String.valueOf(map.maps[3][3]));
//                    break;
//                }
//            
//            if (action2.getText().equals(String.valueOf(map.maps[1][0]))){
//                
//                    history.setText(String.valueOf(map.maps[3][0]));
//                    action1.setText(String.valueOf(map.maps[3][1]));
//                    action2.setText(String.valueOf(map.maps[1][3]));
//                    action3.setText(String.valueOf(map.maps[3][3]));
//                    break;
//                }
//            
//            if (action2.getText().equals(String.valueOf(map.maps[1][0]))){
//                
//                    history.setText(String.valueOf(map.maps[3][0]));
//                    action1.setText(String.valueOf(map.maps[3][1]));
//                    action2.setText(String.valueOf(map.maps[1][3]));
//                    action3.setText(String.valueOf(map.maps[3][3]));
//                    break;
//                }
        }
    }//GEN-LAST:event_action3ActionPerformed

    private void mapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapaActionPerformed
        // TODO add your handling code here:
        Mapa map = new Mapa();
        map.setVisible(true);
        
    }//GEN-LAST:event_mapaActionPerformed

    private void hachaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hachaActionPerformed
        // TODO add your handling code here:
        
            if (history.getText().equals(String.valueOf(map.maps[23][0]))){
                
                    history.setText(String.valueOf(map.maps[31][0]));
                    action1.setText(String.valueOf(map.maps[31][1]));
                    action2.setText(String.valueOf(map.maps[1][31]));
                    action2.setVisible(true);
                    action3.setVisible(false);
                    description.setText(String.valueOf(map.inventario[1][2]));
            }    
        
    }//GEN-LAST:event_hachaActionPerformed

    private void llaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_llaveActionPerformed
        // TODO add your handling code here:
        
            if (history.getText().equals(String.valueOf(map.maps[34][0]))){
                
                    history.setText(String.valueOf(map.maps[36][0]));
                    action1.setText(String.valueOf(map.maps[36][1]));
                    action2.setVisible(false);
                    action3.setVisible(false);
                    description.setText(String.valueOf(map.inventario[1][3]));
            }
    }//GEN-LAST:event_llaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaGeneral.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaGeneral().setVisible(true);
            }
        });
    }

    public void setHistory(JLabel history) {
        this.history = history;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton action1;
    private javax.swing.JButton action2;
    private javax.swing.JButton action3;
    private javax.swing.JTextArea description;
    private javax.swing.JButton hacha;
    private javax.swing.JLabel history;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JButton llave;
    private javax.swing.JButton mapa;
    // End of variables declaration//GEN-END:variables
}
